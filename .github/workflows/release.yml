on:
    push:
        branches: [ main, feat/ci ]
        paths-ignore: [ "**/*.md" ]

env:
    MIRROR_URL: "git@github.com:EpitechPromo2027/B-CPP-500-BDX-5-1-rtype-ethan.thierry.git"

jobs:

    build-windows: # Windows build
        name: Build on Windows
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4
              with:
                submodules: recursive

            - name: Setup CMake
              run: cmake -DCMAKE_BUILD_TYPE=Release -B build -S .

            - name: Build
              run: cmake --build build --parallel

            - name: Package bins in tar.gz
              run: |
                FILES=$(find build -type f \( -name "*.dll" -o -name "R-Type-*.exe" \))
                tar -czf rtype-win.tar.gz $FILES

            - name: Upload binaries
              uses: actions/upload-artifact@v4
              with:
                  name: windows-binaries_${{ github.sha }}
                  path: rtype-win.tar.gz

    build-linux: # Linux build
        name: Build on Linux
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                submodules: recursive

            - name: Install deps
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libx11-dev libxrandr-dev libxcursor-dev libxi-dev
                  sudo apt-get install -y freeglut3-dev libudev-dev libvorbis-dev libflac-dev

            - name: Setup CMake
              uses: ssrobins/install-cmake@v1
              with:
                version: 3.22.0

            - name: Setup CMake
              run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release

            - name: Build
              run: cmake --build build

            - name: Package bins in tar.gz
              run: |
                FILES=$(find build -type f \( -name "*.so" -o -name "R-Type-server" -o -name "R-Type-client" \))
                tar -czf rtype-linux.tar.gz $FILES

            - name: Upload binaries
              uses: actions/upload-artifact@v4
              with:
                  name: ubuntu-binaries_${{ github.sha }}
                  path: rtype-linux.tar.gz

    release:
        name: Create Release
        runs-on: ubuntu-latest
        needs: [ build-linux, build-windows ]
        if: startsWith(github.event.head_commit.message, 'v')
        steps:

            - name: Download binaries
              uses: actions/download-artifact@v4
              with:
                  name: windows-binaries_${{ github.sha }}

            - name: Download binaries
              uses: actions/download-artifact@v4
              with:
                name: ubuntu-binaries_${{ github.sha }}

            - name: Store Release Version
              run: |
                IFS=":" read -r version _ <<< "${{ github.event.head_commit.message }}"
                echo "RELEASE_VERSION=$version" >> $GITHUB_ENV

            - name: Debug Tree
              run: tree .

            - name: Create Release
              uses: softprops/action-gh-release@v2
              with:
                name: R-Type ${{ env.RELEASE_VERSION }}
                tag_name: ${{ env.RELEASE_VERSION }}
                token: ${{ secrets.PAT }}
                files: |
                    rtype-win.tar.gz
                    rtype-linux.tar.gz

    mirror:
        name: Mirror to Epitech
        runs-on: ubuntu-latest
        needs: [ build-linux, build-windows ]
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Mirror repository
              uses: pixta-dev/repository-mirroring-action@v1
              with:
                  target_repo_url: ${{ env.MIRROR_URL }}
                  ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
